Menjalankan Unit Test (go test ./...)
- defaultnya masuk folder
- go test (harus masuk folder) 
- go test ./... (di root project) 
- go test -v (lebih detail)
- go test -v -run TestHelloWorldRizal (hanya function tertentu)

Menggagalkan Unit Test
- Fail() (masih lanjut kode unit test selanjutnya)
- FailNow() (tidak melanjutkan kode program selanjutnya)
- Error() (seperti log tapi selanjutnya mengeksekusi perintah Fail())
- Fatal() (seperti log tapi selanjutnya mengeksekusi perintah FailNow())

Assertion
- menggunakan library Testify
- go get github.com/stretchr/testify
- perbedaan assert (mengeksekusi perintah Fail()) dan require (mengeksekusi perintah FailNow())

Skip Test (Membatalkan Test)
- Membatalkan test yang ada di kode program selanjutnya

Before And After Test
- Harus buat function bernama TestMain
- dieksekusi sekali
- hanya jalan di satu package

Sub Test
- test function di dalam function
- go test -v -run=TestSubTest ./...
- go test -v -run=TestSubTest/Rizal ./... (hanya subtest yang bernama rizal)

Table Test
- seperti sub test tapi dibuat lebih dinamis
- go test -v -run=TestTableHelloWorld ./...

Mock
- kasus seperti kode program memanggil API call atau third party service
- menggunakan library Testify

Benchmark
- menghitung kecepatan performa aplikasi
- go test -v -bench=. ./...
- go test -v -run=TesTidakAda -bench=. ./... (Tanpa run unit test hanya benchmark saja)
- go test -v -run=TesTidakAda -bench=BenchmarkHelloWorldRamli ./... (hanya run 1 benchmark)

Sub Benchmark
- sama seperti sub test unit tests
- go test -v -run=TesTidakAda -bench=BenchmarkSub ./...
- go test -v -run=TesTidakAda -bench=BenchmarkSub/Rizal ./... (hanya 1 sub benchmark)

Table Benchmark
- seperti table test
- go test -v -run=TesTidakAda -bench=BenchmarkTable ./...